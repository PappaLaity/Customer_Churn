services:
  db:
    image: postgres:15
    container_name: churn_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: churn_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: churn_api
    environment:
      DATABASE_URL: postgresql+psycopg2://user:password@db:5432/churn_db
    depends_on:
      - db
    volumes:
      - ./Data:/app/Data 
    ports:
      - "8000:8000"
    env_file: .env
    command: >
      sh -c "alembic upgrade head &&
           python src/api/core/seed.py &&
           uvicorn src.api.main:app --host 0.0.0.0 --port 8000"
    restart: unless-stopped

  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow
    entrypoint: >
      bash -c "
      airflow db migrate &&
      airflow users create -u admin -p admin -f telco -l company -r Admin -e admin@telco.com &&
      airflow webserver & sleep 10 &&
      airflow scheduler
      "
    environment:
      - AIRFLOW_HOME=/opt/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
    ports:
      - "8080:8080"
    restart: on-failure

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    volumes:
      - ./mlruns:/mlflow  # Mount a local directory for artifacts
      # - ./artifacts:/artifacts
    ports:
      - "5001:5000"
    # networks:
    #   - customer_churn_default
    restart: unless-stopped


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped

# networks:
#   customer_churn_default:
#     name: customer_churn_default
volumes:
  db_data:
  grafana-storage:
  prometheus-data:
